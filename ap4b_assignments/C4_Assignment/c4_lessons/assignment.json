{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3dcb2108",
   "metadata": {},
   "source": [
    "# Programming Assignment: üç≠ Candy Analysis üìä"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "53553efd",
   "metadata": {},
   "source": [
    "Welcome to the last programming assignment! üéâ You've been tasked by \"DeeLearning.AI Sugar Rush Delights\" üç¨ to perform analysis on their candy catalog. üç¨ You have to dive into some sweet data about different candies, figure out which ones are the most popular, and give the marketing team some insights to sweeten their campaigns. üí™ Let's get started!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3cd5b9d0",
   "metadata": {},
   "source": [
    "#### Before you begin üö¶\n",
    "\n",
    "Before you get started, as before, import `test_your_code` so that your implementated code can be tested.\n",
    "\n",
    "     Cells that Cells that include the tag `# Test your code!` cannot be edited. Run them as they are."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5aca86a0",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "import test_your_code"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "592a589f",
   "metadata": {},
   "source": [
    "#### TIPS FOR SUCCESSFUL GRADING OF YOUR ASSIGNMENT:\n",
    "\n",
    "- The `### START CODE HERE ###` and `### END CODE HERE ###` comments are meant to signal in what parts of the assignment you are supposed to fill in your solutions.\n",
    "\n",
    "- All cells are frozen except for the ones where you need to submit your solutions or when explicitly mentioned you can interact with it.\n",
    "\n",
    "- The grader will only take into account the cells that are already provided for you so make sure to fill your solution code in those cells.\n",
    "\n",
    "- After each exercise there are cells that use the `test_your_code` from above. Make sure to run these as they will provide you with feedback regarding your solutions.\n",
    "\n",
    "- To submit your notebook, save it and then click on the blue submit button at the beginning of the page.\n",
    "\n",
    "With that out of the way, let's begin!"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "766e89c9",
   "metadata": {},
   "source": [
    "## Exercise 1: Unwrapping the Data üéÅ\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "- The `ex1_helper_functions.py` file includes two functions:\n",
    "    -  `read_candy_data`: This function will help you open up the candy data file and see what's inside.  Think of it like opening a box of chocolates! üç´\n",
    "    - `display_table`: This handy function takes the candy data you've read and displays it neatly in a table.\n",
    "    \n",
    "-  Import both of these helpful functions from the `ex1_helper_functions` file.\n",
    "\n",
    "**Your task:**\n",
    "\n",
    "- Import all (`*`) of the functions from the `ex1_helper_functions`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aa100c23",
   "metadata": {
    "deletable": false,
    "name": "import_cell_1",
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Import using the format \"from file_name import all (*)\"\n",
    "# Add your code here\n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4439fb97",
   "metadata": {},
   "source": [
    "**Note:** Once you see the <span style=\"color: green;\">Correct import statement used!</span> message, it means you can move on to the next step. Otherwise, it would mean your import statment or its format is not as expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d9a7ab03",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.check_ex1_import_statement()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6d1a7395",
   "metadata": {},
   "source": [
    "**Your task:**\n",
    "*   Put that `read_candy_data` function to work!  Use it to read the file `candy_data.csv`. \n",
    "    *   Make sure you pass the file name `candy_data.csv` as a string to the function.    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0e0c7cc5",
   "metadata": {
    "deletable": false,
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Use 'read_candy_data' to read the file `candy_data.csv`\n",
    "candy_data = # Add your code here\n",
    "\n",
    "# Display the contents loaded into the `candy_data` variable\n",
    "display_table(candy_data) \n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5dab4534",
   "metadata": {},
   "source": [
    "#### Expected Output\n",
    "\n",
    "| Candy Name            | Popularity Score | Price in USD |\n",
    "|-----------------------|------------------|------------------|\n",
    "| Twix  | 82  | 1.25               |\n",
    "| PayDay     | 83  | 1.00               |\n",
    "| .  | .               | .\n",
    "| .| .               | .\n",
    "| .    | .               | .\n",
    "| Rolo  | 84  | 1.00               |\n",
    "| Dove Chocolate     | 84  | 1.00               |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a305f20",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.exercise_1(candy_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00bd7c91",
   "metadata": {},
   "source": [
    "## Exercise 2: Popularity Contest! üèÜ\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "- The `ex2_helper_functions.py` file has more tools for you!\n",
    "    - `get_popularity_scores`: This function goes through your candy data and pulls out just the popularity scores. Think of it like separating the cherry filling from the rest of the candy. üçí\n",
    "    -  `print_scores`: This function takes a list of scores and prints them for you.\n",
    "\n",
    "**Your task:**\n",
    "\n",
    "- Import the two `get_popularity_scores` and `print_scores` functions from `ex2_helper_functions`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "20d91bec",
   "metadata": {
    "deletable": false,
    "name": "import_cell_2",
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Import using the format \"from file_name import function_name_1, function_name_2\"\n",
    "# Add your code here\n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f499fed0",
   "metadata": {},
   "source": [
    "**Note:** Once you see the <span style=\"color: green;\">Correct import statement used!</span> message, it means you can move on to the next step. Otherwise, it would mean your import statment or its format is not as expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "411f303c",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.check_ex2_import_statement()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a452896a",
   "metadata": {},
   "source": [
    "**Your task:**\n",
    "*   Now, let's see those popularity scores! Use the `get_popularity_scores` function with the `candy_data` you loaded earlier. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2623ad05",
   "metadata": {
    "deletable": false,
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Use 'get_popularity_scores' and pass in the lst `candy_data`\n",
    "popularity_scores = # Add your code here\n",
    "\n",
    "# Print the `popularity_scores` list\n",
    "print_scores(popularity_scores) \n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "57aea43d",
   "metadata": {},
   "source": [
    "#### Expected Output:\n",
    "\n",
    "```\n",
    "[92, 83, 85, 84, 83, 94, 84, 95, 84, 83, 91, 83, 88, 84, 84, 84, 84, 84, 84]\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "76449d08",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.exercise_2(popularity_scores)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "249a8406",
   "metadata": {},
   "source": [
    "## Exercise 3: Finding the Average Sweet Spot üéØ\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "- Python has a special built-in module called `statistics`.  It's like a secret compartment in your candy box full of useful tools! üß∞ \n",
    "- You're going to use the `mean` function from the module `statistics` to find the average popularity score.\n",
    "\n",
    "**Your task:**\n",
    "\n",
    "- Import the Python package `statistics` *as* `stats`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a5890a15",
   "metadata": {
    "deletable": false,
    "name": "import_cell_3",
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Import using the format \"import module_name as alias\"\n",
    "# Use the alias name as \"stats\"\n",
    "# Add your code here\n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a397dd9",
   "metadata": {},
   "source": [
    "**Note:** Once you see the <span style=\"color: green;\">Correct import statement used!</span> message, it means you can move on to the next step. Otherwise, it would mean your import statment or its format is not as expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "db8c2f94",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.check_ex3_import_statement()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "62d8fc64",
   "metadata": {},
   "source": [
    "**Your task:**\n",
    "\n",
    "* Time to calculate! Use the `mean` function from your `stats` module (remember how to use an alias with the dot `.` ) to find the average popularity score of all the candies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4ec355c",
   "metadata": {
    "deletable": false,
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Access the \"mean\" function in \"stats\"\n",
    "# Pass \"popularity_scores\" to the mean function\n",
    "avg_popularity = # Add your code here\n",
    "\n",
    "### Print the average upto 2 decimal places\n",
    "print(f\"Average Popularity Score: {avg_popularity:.2f}\") \n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6a2c0552",
   "metadata": {},
   "source": [
    "#### Expected Output\n",
    "\n",
    "```\n",
    "Average Popularity Score: 85.95\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12103e04",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.exercise_3(avg_popularity)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a9b6238f",
   "metadata": {},
   "source": [
    "## Exercise 4: The Top Candy Leaderboard ü•á\n",
    "\n",
    "\n",
    "**Instructions:**\n",
    "\n",
    "- You have even more tools in your `ex4_helper_functions.py` file!\n",
    "    -  `get_top_candies`:  This function is like a talent scout - it will find the candies whose popularity scores are above a certain level, \"avg_popularity\" (the average popularity you calculated in Exercise 3). \n",
    "    -  `display_pretty_table`:  This one makes the results look extra nice. ‚ú®\n",
    "\n",
    "**Your task:**\n",
    "\n",
    "- Import the entire file `ex4_helper_functions`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4ef5fbb0",
   "metadata": {
    "deletable": false,
    "name": "import_cell_4",
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Import using the format \"import file_name\"\n",
    "# Add your code here\n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "225e461c",
   "metadata": {},
   "source": [
    "**Note:** Once you see the <span style=\"color: green;\">Correct import statement used!</span> message, it means you can move on to the next step. Otherwise, it would mean your import statment or its format is not as expected."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "edef3dac",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.check_ex4_import_statement()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f12f2ac",
   "metadata": {},
   "source": [
    "**Your task:**\n",
    "\n",
    "- Use the `get_top_candies` function to round up all the candies that have a popularity score higher than or equal to the `avg_popularity` you found. \n",
    "\n",
    "<details>\n",
    "    <summary><span style=\"color: blue; font-weight: bold;\">Hint: (click here to open)</span></summary>\n",
    "    <p>When you have imported the entire module/local file, you can access any function from it using the <code>.</code> (dot) character.</p>\n",
    "</details>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8c3e39ee",
   "metadata": {
    "deletable": false,
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "# Access the \"get_top_candies\" function in \"ex4_helper_functions\"\n",
    "# Pass \"candy_data\" and \"avg_popularity\" to the \"get_top_candies\" function\n",
    "top_candies = # Add your code here\n",
    "\n",
    "### Display the \"top_candies\" list\n",
    "ex4_helper_functions.display_pretty_table(top_candies) \n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c43f91d2",
   "metadata": {},
   "source": [
    "#### Expected Output:\n",
    "\n",
    "```\n",
    "+------------+------------------+--------------+\n",
    "| Candy Name | Popularity Score | Price in USD |\n",
    "+------------+------------------+--------------+\n",
    "|    Twix    |        92        |     1.25     |\n",
    "|   M&M's    |        94        |     1.25     |\n",
    "|  Snickers  |        95        |     1.25     |\n",
    "|  Kit Kat   |        91        |     1.25     |\n",
    "| Starburst  |        88        |     1.0      |\n",
    "+------------+------------------+--------------+\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d63d8e47",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.exercise_4(top_candies)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ffd5dec7",
   "metadata": {},
   "source": [
    "## Exercise 5: Crafting the Perfect Description\n",
    "\n",
    "Great work identifying the top candies! üéâ Now, let's help the marketing team really sell these tasty treats. üç´ You'll use the `get_llm_response` function provided to you below to generate a short, catchy two-sentence description for each of the top candies. \n",
    "\n",
    "You can adjust the temperature and content variables to fine-tune the responses from the LLM.\n",
    "\n",
    "Run the cell below to import the `client` which will help run the `get_llm_response` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "46b30c32",
   "metadata": {
    "deletable": false,
    "editable": false,
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "from ex5_helper_functions import client"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b5a0934b",
   "metadata": {},
   "source": [
    "**Your task:**\n",
    "- Play around with different `temperature` settings.\n",
    "- Play around with a different `content` description.\n",
    "\n",
    "**Note** In order to get a successful grade for this exercise, you have to set values for other than `temperature=0.0` and  `\"content\": \"You are an AI assistant.\"`\n",
    "\n",
    "**Fun Suggestion**: For `content`, you can use \"You talk like a Pirate.\" and temperature as `0.5`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0745c0ee",
   "metadata": {
    "deletable": false,
    "name": "cell_for_ex5",
    "tags": [
     "graded"
    ]
   },
   "outputs": [],
   "source": [
    "### START CODE HERE ###\n",
    "\n",
    "def get_llm_response(prompt):\n",
    "    completion = client.chat.completions.create( \n",
    "        model='gpt-4o-mini', \n",
    "        messages=[ \n",
    "            {\n",
    "                \"role\": \"system\",\n",
    "                \"content\": \"You are an AI assistant.\", # <-- You have to make change here\n",
    "            },\n",
    "            {\"role\": \"user\", \"content\": prompt},\n",
    "        ],\n",
    "        temperature=0.0, # <-- You have to make change here \n",
    "    )\n",
    "    response = completion.choices[0].message.content \n",
    "    return response\n",
    "\n",
    "### END CODE HERE ###"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a8a8603b",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# Test your code!\n",
    "test_your_code.check_change_in_ex5()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3e4990c9",
   "metadata": {},
   "source": [
    "**Note:** Once you see the <span style=\"color: green;\">The function <code>get_llm_response</code> is correctly configured</span> message, it means you can move on to the next step. Otherwise, make changes to your `get_llm_response` as instructed."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9916f74f",
   "metadata": {},
   "source": [
    "### Submission Note:\n",
    "If you have passed all the tests upto this point, you can submit your assignment. Running the below cell is OPTIONAL and will not affect your grading in anyway."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3e8689b1",
   "metadata": {
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "for candy in top_candies:\n",
    "    \n",
    "    prompt = f\"\"\"\n",
    "    For the given candy name, {candy['Candy Name']}, write a short, catchy two-sentence description.\n",
    "    \"\"\"\n",
    "    \n",
    "    response = get_llm_response(prompt)\n",
    "    \n",
    "    print(f\"NAME: {candy['Candy Name']}\")\n",
    "    print(f\"DESCRIPTION: {response}\")\n",
    "    print()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8df99bc4",
   "metadata": {},
   "source": [
    "## Conclusion\n",
    "That's a wrap! You've used Python to import data, analyze it, and even generate descriptions! Give yourself a pat on the back for completing this assignment. You've taken another step forward in your Python journey, and we can't wait to see what you accomplish next! üòä"
   ]
  }
 ],
 "metadata": {
  "grader_version": "1",
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
