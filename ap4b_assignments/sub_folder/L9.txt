Now
 that you have seen how you can combine variables in f-strings to customize and
 quickly update strings, let's explore how you can extend this pattern to create
 prompts that lets you interact with AI models from inside a Python program. I'm going to start by running this command from helper functions import print LLM response
. Don't worry too much about the exact details of this line of code, but as a reminder, when you run the code cells, please run them
 in order from the first to the last, or from top to bottom. What you've done is just load a function that allows you to interact directly with a large language model via Python code. So to use it you can type print
 LLM response. Then open parentheses, quotation mark. "What is the capital of France?" quotation mark and close the parentheses. And this actually calls ChatGPT. And it got back the answer. The capital of France is Paris. The string
 inside the parentheses here, is the prompt. The same kind of text that you type directly into the web interface of a chatbot like ChatGPT. So, you can now use all the Python coding you've learned so far to build up complex prompts that can include variables, and pass them to a large language model using this
 code. Now, here's something fun we could do. If name were a dog he would be dog age years. And so on. Or if we were to say dog age equals 21 over seven, so that would be three and run this, then print LLM response gives. Okay. This would
 be an adult dog, you know, like a 21 year old human, curious, playful and so on. And so by using variables to construct f-strings that you then pass to a chatbot, you can get back really interesting and thoughtful responses. Now, let's look at a few more examples of
 using variables, and we'll look at some bugs and how to fix them. So, let's write a children's story where the driver is unicorn, driver's vehicle is a colorful, asymmetric, dinosaur car and the planet is Pluto. And then let's print LLM response. Write me
 a children's story about a driver racing on a vehicle, For the favorite planet. So there are few things wrong with this code. I encourage you to pause the video and see if you can spot what's wrong with this. Let me run this code myself. There are actually quite a few errors. Drivers
 vehicle has an apostrophe S in the variable's name and is also a space if you want a space, use instead an underscore like that. And that would fix it. I also need to replace this down here. If I run this again, then, oh looks like we left off the close quotes for Pluto
 and there's a space here which makes this an invalid variable name. So, if I do that, this should run. And then haven't fixed this yet, let's see what happens. So this doesn't work because I have not the space in my curly braces. So I do that.
 Then this lets me use the large language model to write that 300 word children's story. Cool. Not too shabby. Sparkle and Rory in a race on Pluto. I encourage you to, you know, plug in a different driver or plug in a different vehicle and run this yourself and get your own
 children's story. So that takes us almost to the end of this lesson. Please take a look at the exercises at the end of the Jupyter Notebook to practice your code writing and debugging skills. And same as before, in case if you get stuck, remember, you can use the chat bot to help you get
 through those exercises. Now, in this lesson, we saw a few functions print, print LLM response and earlier in the video we saw also type. In the next video, we'll take a deeper dive into functions, what they are, how to use them. I'll see you in the next video